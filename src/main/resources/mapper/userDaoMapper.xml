<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yandan.dao.UserDao">
    <select id="getUsers" parameterType="java.util.Map" resultType="User">
        select user.id as id,user.name as name,user.role_id as roleId ,role.name as role,user.password as password
        from user left join role on user.role_id = role.id
        <where>
            <foreach collection="paramMap.entrySet()" item="value" index="key" separator="and">
                <if test="!(&quot;start&quot;.equals(key)||&quot;size&quot;.equals(key))">
                    user.${key} like concat('%', #{value}, '%')
                </if>
            </foreach>
        </where>
        limit #{paramMap.start},#{paramMap.size}
    </select>
    <delete id="delete" >
        delete from user where id in
        <foreach collection="ids" item="id" open="(" close=")" separator=",">
            #{id}
        </foreach>
    </delete>
    <select id="getCount" parameterType="java.util.Map" resultType="java.lang.Integer">
        select count(*) from user
        <where>
            <foreach collection="paramMap.entrySet()" item="value" index="key" separator="and">
                <if test="!(&quot;start&quot;.equals(key)||&quot;size&quot;.equals(key))">
                    ${key} like concat('%', #{value}, '%')
                </if>
            </foreach>
        </where>
    </select>
    <update id="userUpdate" >
        update user set name=#{name},password=#{password} where id=#{id}
    </update>
    <update id="adminUpdate" >
        update user set name=#{name},role_id=#{roleId} where id=#{id}
    </update>
    <select id="getUser" parameterType="java.lang.String" resultType="User">
        select user.id as id,user.name as name,user.role_id as roleId ,role.name as role,user.password as password ,user.work_id as workId from user,role
         where user.id=#{id} and user.role_id=role.id
    </select>
    <insert id="insert">
        insert into user values(#{name},#{id},#{password},#{roleId},#{workId})
    </insert>
</mapper>