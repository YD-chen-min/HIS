<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yandan.dao.MyNodeDao">
   <select id="getPageMyNodes" parameterType="java.util.Map"  resultType="MyNode">
       select id,text,pid,href from node
       <where>
           <foreach collection="paramMap.entrySet()" item="value" index="key" separator="and">
               <if test="!(&quot;start&quot;.equals(key)||&quot;size&quot;.equals(key))">
                   ${key} like concat('%', #{value}, '%')
               </if>
           </foreach>
       </where>
        limit #{paramMap.start} , #{paramMap.size}
   </select>
    <select id="getMyNodeCounts" resultType="java.lang.Integer" parameterType="java.util.Map">
        select count(*) from node
        <where>
            <foreach collection="paramMap.entrySet()" item="value" index="key" separator="and">
                ${key} like concat('%',#{value},'%')
            </foreach>
        </where>
    </select>
   <update id="updateMyNode" parameterType="java.util.Map">
       update node set
       <foreach collection="paramMap.entrySet()" item="value" index="key" separator=",">
           ${key} = #{value}
       </foreach>
        where id=#{paramMap.id}
   </update>
    <delete id="deleteMyNodes" parameterType="java.util.List">
        delete from node where id in
        <foreach collection="ids" open="(" close=")" separator="," item="id">
            #{id}
        </foreach>
    </delete>
    <insert id="insertMyNode" parameterType="java.util.Map">
        insert into node values(#{paramMap.id,},#{paramMap.text},#{paramMap.pid},#{paramMap.href})
    </insert>
    <select id="getUserNodes" parameterType="java.lang.String" resultType="MyNode">
        select id,text,pid,href from node where id in ( select node_id from role_node where role_id=#{roleId})
    </select>
    <select id="getUserNodeCounts" parameterType="java.lang.String" resultType="java.lang.Integer">
        select count(*) from node where id in ( select node_id from role_node where role_id=#{roleId})
    </select>
</mapper>